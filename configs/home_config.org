* user

  #+BEGIN_SRC emacs-lisp
  (setq user-full-name "Ricardo Torres"
        user-mail-address "ricardojgtorres@gmail.com")
  #+END_SRC


* packages

** generic packages
*** projectile
#+begin_src emacs-lisp
(use-package projectile
    :init
    ;; NOTE: Set this to the folder where you keep your Git repos!
    (setq projectile-project-search-path '("z:/siscog"))
    (when (file-directory-p "~/git")
      (setq projectile-project-search-path '("~/git"))))
#+end_src
** programming helpers
*** Magit
  #+BEGIN_SRC emacs-lisp
    (use-package magit
      :ensure t)
  #+END_SRC
*** company-mode
#+begin_src emacs-lisp
  (use-package company
    :after lsp-mode
    :hook (lsp-mode . company-mode)
    :bind (:map lsp-mode-map
	   ("<tab>" . company-indent-or-complete-common)))
#+end_src

*** Languages
**** Generic
***** lsp-mode
      #+BEGIN_SRC emacs-lisp
	(use-package lsp-mode
	  :ensure t
	  :commands (lsp lsp-deferred)
	  :init
	  (setq lsp-keymap-prefix "C-c l")  ;; Or 'C-l', 's-l'
	  :hook ((f90-mode . lsp-mode)
		 (python-mode . lsp-mode)
		 (lsp-mode . lsp-enable-which-key-integration)))
	(use-package helm-lsp
	  :ensure t
	  :config
	  (define-key lsp-mode-map [remap xref-find-apropos] #'helm-lsp-workspace-symbol))
	(use-package lsp-ui
	  :ensure t
	  :hook (lsp-mode . lsp-ui-mode)
	  :custom
	  (lsp-ui-doc-position 'bottom))
	(use-package lsp-treemacs
	  ;; project wide overview
	  :ensure t
	  :commands lsp-treemacs-errors-list)
      #+END_SRC
**** Python
      #+BEGIN_SRC emacs-lisp
	(use-package lsp-pyright
	  :ensure t
	  :hook (python-mode . (lambda ()
				 (require 'lsp-pyright)
				 (lsp))))  ; or lsp-deferred
      #+END_SRC
**** Fortran
      #+BEGIN_SRC emacs-lisp
	(add-hook 'f90-mode-hook 'lsp)
      #+END_SRC
**** Lisp
***** slime
    #+BEGIN_SRC emacs-lisp
      (load (expand-file-name "~/quicklisp/slime-helper.el"))
      ;; Replace "sbcl" with the path to your implementation
      (setq inferior-lisp-program "/usr/bin/sbcl")

       ;; (eval-and-compile (require 'slime-autoloads))
       (setq slime-contribs '(slime-fancy slime-banner slime-indentation slime-mdot-fu slime-fuzzy))
    #+END_SRC
* org mode
   #+BEGIN_SRC emacs-lisp
     (setq org-directory "~/git/orgfiles"
	   org-agenda-files '("~/git/orgfiles/todo.org"))
     (org-babel-do-load-languages
      'org-babel-load-languages '((fortran . t)))
     (setq org-babel-python-command "/usr/bin/python3")
   #+END_SRC
